<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.domain.admin.mapper.AdminAccesslogMapper">


	<!-- 查询数据数量 -->
	<select id="queryListCount" parameterType="map" resultType="Integer">
		select count(*)
		from admin_accesslog a,admin_user u,admin_role r where a.userId = u.id and u.roleId = r.id 
		<if test="roleId !=null and roleId > 0">
			and r.id = #{roleId}
		</if>  
		<if test="userName !=null and userName !=''">
			and u.userName LIKE  CONCAT('%',#{userName},'%')
		</if> 
		<!-- 时间查询 -->
		<choose>
		 	<when test="startTime != null and startTime != '' and lastTime != null and lastTime != ''">
		 		and a.createTime BETWEEN #{startTime} and #{lastTime} 
		 	</when>
		 	<otherwise>
				 <if test="startTime != null and startTime!=''">
				 	<![CDATA[
					      and DATE_FORMAT(a.createTime, '%Y-%m-%d %H:%i:%S') >=  DATE_FORMAT(#{startTime}, '%Y-%m-%d %H:%i:%S') 
					]]>
				 </if>
				 <if test="lastTime != null and lastTime!=''">
					<![CDATA[
					      and DATE_FORMAT(a.createTime, '%Y-%m-%d %H:%i:%S') <  DATE_FORMAT(#{lastTime}, '%Y-%m-%d %H:%i:%S') 
					]]>
				 </if>
		 	</otherwise>
		 </choose>
		<!-- 时间查询 end -->
	</select>

	<!-- 查询数据列表 -->
	<select id="queryList" parameterType="map" resultType="HashMap">
		
		select a.id,a.handleContent,a.configKey,a.userId,a.createTime,a.clientIpAndName,u.userName,u.realName,u.sex,r.name as roleName
		from admin_accesslog a,admin_user u,admin_role r where a.userId = u.id and u.roleId = r.id 
		<if test="roleId !=null and roleId > 0">
			and r.id = #{roleId}
		</if>  
		<if test="userName !=null and userName !=''">
			and u.userName LIKE  CONCAT('%',#{userName},'%')
		</if>  
		<!-- 时间查询 -->
		<choose>
		 	<when test="startTime != null and startTime != '' and lastTime != null and lastTime != ''">
		 		and a.createTime BETWEEN #{startTime} and #{lastTime} 
		 	</when>
		 	<otherwise>
				 <if test="startTime != null and startTime!=''">
				 	<![CDATA[
					      and DATE_FORMAT(a.createTime, '%Y-%m-%d %H:%i:%S') >=  DATE_FORMAT(#{startTime}, '%Y-%m-%d %H:%i:%S') 
					]]>
				 </if>
				 <if test="lastTime != null and lastTime!=''">
					<![CDATA[
					      and DATE_FORMAT(a.createTime, '%Y-%m-%d %H:%i:%S') <  DATE_FORMAT(#{lastTime}, '%Y-%m-%d %H:%i:%S') 
					]]>
				 </if>
		 	</otherwise>
		 </choose>
		<!-- 时间查询 end -->
		order by a.createTime desc 
		<!-- 分页 -->
		<if test="last != null and '' != last and last > 0">  
            <![CDATA[  
              LIMIT #{index},#{last}
            ]]>  
     	</if>
	</select>
	
	<!-- 条件删除日志 -->
	<delete id="deleteAccounTiaojian" parameterType="map">
		delete from admin_accesslog where 1=1 
		<if test="userName !=null and userName !='' and roleId == 0" >
			and userId in (select id from admin_user where userName LIKE  CONCAT('%',#{userName},'%'))
		</if> 
	 	<if test="userName ==null or userName =='' and roleId !=null and roleId > 0">
			and userId in (select id from admin_user where roleId = #{roleId})
		</if>  
		
	 	<if test="userName !=null and userName !='' and roleId !=null and roleId > 0 ">
			and userId in (select id from admin_user where roleId = #{roleId} and userName LIKE CONCAT('%',#{userName},'%'))
		</if>  
		<!-- 时间查询 -->
		<choose>
		 	<when test="startTime != null and startTime != '' and lastTime != null and lastTime != ''">
		 		and createTime BETWEEN #{startTime} and #{lastTime} 
		 	</when>
		 	<otherwise>
				 <if test="startTime != null and startTime!=''">
				 	<![CDATA[
					      and DATE_FORMAT(createTime, '%Y-%m-%d %H:%i:%S') >=  DATE_FORMAT(#{startTime}, '%Y-%m-%d %H:%i:%S') 
					]]>
				 </if>
				 <if test="lastTime != null and lastTime!=''">
					<![CDATA[
					      and DATE_FORMAT(createTime, '%Y-%m-%d %H:%i:%S') <  DATE_FORMAT(#{lastTime}, '%Y-%m-%d %H:%i:%S') 
					]]>
				 </if>
		 	</otherwise>
		 </choose>
	</delete>
	
	<!-- 删除日志 -->
	<delete id="deleteAccoun" parameterType="java.util.List">
		 DELETE FROM admin_accesslog WHERE id IN    
	    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">     
	        #{item}     
	    </foreach>
	</delete>
</mapper>