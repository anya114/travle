<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.domain.plus.mapper.OrderRenewMapper">


    <insert id="insertOrderRenew"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `order_renew`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="orderId!=null">
                        `order_id`,
                    </if>
                    <if test="orderNo!=null">
                        `order_no`,
                    </if>
                    <if test="renewState!=null">
                        `renew_state`,
                    </if>
                    <if test="renewType!=null">
                        `renew_type`,
                    </if>
                    <if test="renewMoney!=null">
                        `renew_money`,
                    </if>
                    <if test="createTime!=null">
                        `create_time`,
                    </if>
                    <if test="updateTime!=null">
                        `update_time`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="orderId!=null">
                    #{orderId},
                </if>
                <if test="orderNo!=null">
                    #{orderNo},
                </if>
                <if test="renewState!=null">
                    #{renewState},
                </if>
                <if test="renewType!=null">
                    #{renewType},
                </if>
                <if test="renewMoney!=null">
                    #{renewMoney},
                </if>
                <if test="createTime!=null">
                    #{createTime},
                </if>
                <if test="updateTime!=null">
                    #{updateTime},
                </if>
        </trim>
        )
    </insert>




    <update id="updateOrderRenew">
        UPDATE `order_renew`
        SET
        <trim suffixOverrides=",">
            <if test="orderId != null">
                `order_id` = #{orderId},
            </if>

            <if test="orderNo!=null">
                `order_no` = #{orderNo},
            </if>
            <if test="renewState!=null">
                `renew_state` = #{renewState},
            </if>
            <if test="renewType != null">
                `renew_type` = #{renewType},
            </if>
            <if test="renewMoney != null">
                `renew_money` = #{renewMoney},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `order_renew`
        SET
        <trim suffixOverrides=",">
        <if test="set.orderId != null">
            `order_id` = #{set.orderId},
        </if>
        <if test="set.renewType != null">
            `renew_type` = #{set.renewType},
        </if>
        <if test="set.renewMoney != null">
            `renew_money` = #{set.renewMoney},
        </if>
        <if test="set.createTime != null">
            `create_time` = #{set.createTime},
        </if>
        <if test="set.updateTime != null">
            `update_time` = #{set.updateTime},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.orderIdList != null">
                    `order_id` in
                    <foreach collection="where.orderIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.orderIdSt !=null">
                `order_id` >= #{where.orderIdSt} and
            </if>
            <if test="where.orderIdEd!=null">
                `order_id` &lt;= #{where.orderIdEd} and
            </if>
                <if test="where.renewTypeList != null">
                    `renew_type` in
                    <foreach collection="where.renewTypeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.renewTypeSt !=null">
                `renew_type` >= #{where.renewTypeSt} and
            </if>
            <if test="where.renewTypeEd!=null">
                `renew_type` &lt;= #{where.renewTypeEd} and
            </if>
                <if test="where.renewMoneyList != null">
                    `renew_money` in
                    <foreach collection="where.renewMoneyList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.renewMoneySt !=null">
                `renew_money` >= #{where.renewMoneySt} and
            </if>
            <if test="where.renewMoneyEd!=null">
                `renew_money` &lt;= #{where.renewMoneyEd} and
            </if>
                <if test="where.createTimeList != null">
                    `create_time` in
                    <foreach collection="where.createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.createTimeSt !=null">
                `create_time` >= #{where.createTimeSt} and
            </if>
            <if test="where.createTimeEd!=null">
                `create_time` &lt;= #{where.createTimeEd} and
            </if>
                <if test="where.updateTimeList != null">
                    `update_time` in
                    <foreach collection="where.updateTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.updateTimeSt !=null">
                `update_time` >= #{where.updateTimeSt} and
            </if>
            <if test="where.updateTimeEd!=null">
                `update_time` &lt;= #{where.updateTimeEd} and
            </if>
        </trim>
    </update>


    <resultMap type="com.domain.plus.entity.OrderRenew" id="OrderRenewMap">
        <result property="id" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="renewType" column="renew_type"/>
        <result property="renewState" column="renew_state"/>
        <result property="orderNo" column="order_no"/>
        <result property="renewMoney" column="renew_money"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <select id="queryOrderRenewByUserIdAndType" resultType="com.domain.plus.vo.OrderRenewVo">
        SELECT
            o.id AS id,
            c.car_no AS carNo,
            o.car_id AS carId,
            r.renew_money AS money,
            r.create_time AS createTime,
            o.order_type AS orderType,
            r.update_time AS updateTime,
            r.renew_state AS renewState
        FROM
            order_renew r
        LEFT JOIN plus_order o ON o.id = r.order_id
        LEFT JOIN plus_car c ON c.id = o.car_id
        WHERE
            r.renew_state > 0 AND
            o.user_id = #{userId} AND
            o.order_type = #{orderType}
        ORDER BY r.create_time DESC
    </select>

    <select id="queryOrderRenew" resultMap="OrderRenewMap">
        select
        <include refid="baseResult"></include>
        from  `order_renew`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="orderId != null">
                `order_id` = #{orderId} and
            </if>
            <if test="renewType != null">
                `renew_type` = #{renewType} and
            </if>
            <if test="renewMoney != null">
                `renew_money` = #{renewMoney} and
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime} and
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime} and
            </if>
            <if test = "(_parameter instanceof entity.OrderRenew$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="orderIdList != null">
                    `order_id` in
                    <foreach collection="orderIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="orderIdSt !=null">
                    `order_id` >= #{orderIdSt} and
                </if>
                <if test="orderIdEd!=null">
                    `order_id` &lt;= #{orderIdEd} and
                </if>
                <if test="renewTypeList != null">
                    `renew_type` in
                    <foreach collection="renewTypeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="renewTypeSt !=null">
                    `renew_type` >= #{renewTypeSt} and
                </if>
                <if test="renewTypeEd!=null">
                    `renew_type` &lt;= #{renewTypeEd} and
                </if>
                <if test="renewMoneyList != null">
                    `renew_money` in
                    <foreach collection="renewMoneyList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="renewMoneySt !=null">
                    `renew_money` >= #{renewMoneySt} and
                </if>
                <if test="renewMoneyEd!=null">
                    `renew_money` &lt;= #{renewMoneyEd} and
                </if>
                <if test="createTimeList != null">
                    `create_time` in
                    <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="createTimeSt !=null">
                    `create_time` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `create_time` &lt;= #{createTimeEd} and
                </if>
                <if test="updateTimeList != null">
                    `update_time` in
                    <foreach collection="updateTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="updateTimeSt !=null">
                    `update_time` >= #{updateTimeSt} and
                </if>
                <if test="updateTimeEd!=null">
                    `update_time` &lt;= #{updateTimeEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryOrderRenewLimit1" resultMap="OrderRenewMap">
        select
        <include refid="baseResult"></include>
        from  `order_renew`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="orderId != null">
                `order_id` = #{orderId} and
            </if>
            <if test="renewType != null">
                `renew_type` = #{renewType} and
            </if>
            <if test="renewMoney != null">
                `renew_money` = #{renewMoney} and
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime} and
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime} and
            </if>
            <if test = "(_parameter instanceof entity.OrderRenew$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="orderIdList != null">
                        `order_id` in
                        <foreach collection="orderIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="orderIdSt !=null">
                    `order_id` >= #{orderIdSt} and
                </if>
                <if test="orderIdEd!=null">
                    `order_id` &lt;= #{orderIdEd} and
                </if>
                    <if test="renewTypeList != null">
                        `renew_type` in
                        <foreach collection="renewTypeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="renewTypeSt !=null">
                    `renew_type` >= #{renewTypeSt} and
                </if>
                <if test="renewTypeEd!=null">
                    `renew_type` &lt;= #{renewTypeEd} and
                </if>
                    <if test="renewMoneyList != null">
                        `renew_money` in
                        <foreach collection="renewMoneyList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="renewMoneySt !=null">
                    `renew_money` >= #{renewMoneySt} and
                </if>
                <if test="renewMoneyEd!=null">
                    `renew_money` &lt;= #{renewMoneyEd} and
                </if>
                    <if test="createTimeList != null">
                        `create_time` in
                        <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="createTimeSt !=null">
                    `create_time` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `create_time` &lt;= #{createTimeEd} and
                </if>
                    <if test="updateTimeList != null">
                        `update_time` in
                        <foreach collection="updateTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="updateTimeSt !=null">
                    `update_time` >= #{updateTimeSt} and
                </if>
                <if test="updateTimeEd!=null">
                    `update_time` &lt;= #{updateTimeEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `order_id`,
        `renew_type`+0 as `renew_type`,
        `renew_money`,
        `renew_state`,
        `order_no`,
        `create_time`,
        `update_time`,
        </trim>
    </sql>

    <select id="queryOrderRenewByOrder" resultMap="OrderRenewMap">
        SELECT <include refid="allResult"/> FROM order_renew  WHERE order_id = #{orderId} ORDER BY id DESC LIMIT 1
    </select>
    

    <select id="queryOrderRenewByOrderNo" resultMap="OrderRenewMap">
        SELECT <include refid="allResult"/> FROM order_renew  WHERE order_no = #{orderNo} ORDER BY id DESC LIMIT 1
    </select>

    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof entity.OrderRenew$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.orderId==true">
                        `order_id`,
                    </if>
                    <if test="fetchFields.fetchFields.renewType==true">
                        `renew_type`+0 as `renew_type`,
                    </if>
                    <if test="fetchFields.fetchFields.renewMoney==true">
                        `renew_money`,
                    </if>
                    <if test="fetchFields.fetchFields.createTime==true">
                        `create_time`,
                    </if>
                    <if test="fetchFields.fetchFields.updateTime==true">
                        `update_time`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.orderId==null">
                        `order_id`,
                    </if>
                    <if test="fetchFields.excludeFields.renewType==null">
                        `renew_type`+0 as `renew_type`,
                    </if>
                    <if test="fetchFields.excludeFields.renewMoney==null">
                        `renew_money`,
                    </if>
                    <if test="fetchFields.excludeFields.createTime==null">
                        `create_time`,
                    </if>
                    <if test="fetchFields.excludeFields.updateTime==null">
                        `update_time`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof entity.OrderRenew$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


    <select id="queryTotalMoney" resultType="java.lang.Long">
        SELECT
            IFNULL(SUM(renew_money),0) AS money
        FROM
            order_renew
        WHERE
            renew_state = 1
    </select>

    <select id="queryRenewByOrderId" resultMap="OrderRenewMap">
        SELECT <include refid="allResult"/> FROM order_renew WHERE order_id = #{orderId} ORDER BY id DESC LIMIT 1
    </select>

    <delete id="deleteByOrderId" >
        delete from order_renew where order_id = #{orderId} and renew_state = 0
    </delete>
</mapper>