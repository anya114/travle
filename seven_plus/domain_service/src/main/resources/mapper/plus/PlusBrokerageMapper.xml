<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.domain.plus.mapper.PlusBrokerageMapper">


    <insert id="insertPlusBrokerage" >
        INSERT INTO `plus_brokerage`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="userId!=null">
                        `user_id`,
                    </if>
                    <if test="secondId!=null">
                        `second_id`,
                    </if>
                    <if test="brokerage!=null">
                        `brokerage`,
                    </if>
                    <if test="orderType!=null">
                        `order_type`,
                    </if>
                    <if test="createTime!=null">
                        `create_time`,
                    </if>
                    <if test="updateTime!=null">
                        `update_time`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="userId!=null">
                    #{userId},
                </if>
                <if test="secondId!=null">
                    #{secondId},
                </if>
                <if test="brokerage!=null">
                    #{brokerage},
                </if>
                <if test="orderType!=null">
                    #{orderType},
                </if>
                <if test="createTime!=null">
                    #{createTime},
                </if>
                <if test="updateTime!=null">
                    #{updateTime},
                </if>
        </trim>
        )
    </insert>




    <update id="updatePlusBrokerage">
        UPDATE `plus_brokerage`
        SET
        <trim suffixOverrides=",">
            <if test="userId != null">
                `user_id` = #{userId},
            </if>
            <if test="secondId != null">
                `second_id` = #{secondId},
            </if>
            <if test="brokerage != null">
                `brokerage` = #{brokerage},
            </if>
            <if test="orderType != null">
                `order_type` = #{orderType},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `plus_brokerage`
        SET
        <trim suffixOverrides=",">
        <if test="set.userId != null">
            `user_id` = #{set.userId},
        </if>
        <if test="set.secondId != null">
            `second_id` = #{set.secondId},
        </if>
        <if test="set.brokerage != null">
            `brokerage` = #{set.brokerage},
        </if>
        <if test="set.orderType != null">
            `order_type` = #{set.orderType},
        </if>
        <if test="set.createTime != null">
            `create_time` = #{set.createTime},
        </if>
        <if test="set.updateTime != null">
            `update_time` = #{set.updateTime},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.userIdList != null">
                    `user_id` in
                    <foreach collection="where.userIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.userIdSt !=null">
                `user_id` >= #{where.userIdSt} and
            </if>
            <if test="where.userIdEd!=null">
                `user_id` &lt;= #{where.userIdEd} and
            </if>
                <if test="where.secondIdList != null">
                    `second_id` in
                    <foreach collection="where.secondIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.secondIdSt !=null">
                `second_id` >= #{where.secondIdSt} and
            </if>
            <if test="where.secondIdEd!=null">
                `second_id` &lt;= #{where.secondIdEd} and
            </if>
                <if test="where.brokerageList != null">
                    `brokerage` in
                    <foreach collection="where.brokerageList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.brokerageSt !=null">
                `brokerage` >= #{where.brokerageSt} and
            </if>
            <if test="where.brokerageEd!=null">
                `brokerage` &lt;= #{where.brokerageEd} and
            </if>
                <if test="where.orderTypeList != null">
                    `order_type` in
                    <foreach collection="where.orderTypeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.orderTypeSt !=null">
                `order_type` >= #{where.orderTypeSt} and
            </if>
            <if test="where.orderTypeEd!=null">
                `order_type` &lt;= #{where.orderTypeEd} and
            </if>
                <if test="where.createTimeList != null">
                    `create_time` in
                    <foreach collection="where.createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.createTimeSt !=null">
                `create_time` >= #{where.createTimeSt} and
            </if>
            <if test="where.createTimeEd!=null">
                `create_time` &lt;= #{where.createTimeEd} and
            </if>
                <if test="where.updateTimeList != null">
                    `update_time` in
                    <foreach collection="where.updateTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.updateTimeSt !=null">
                `update_time` >= #{where.updateTimeSt} and
            </if>
            <if test="where.updateTimeEd!=null">
                `update_time` &lt;= #{where.updateTimeEd} and
            </if>
        </trim>
    </update>


    <resultMap type="com.domain.plus.entity.PlusBrokerage" id="PlusBrokerageMap">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="secondId" column="second_id"/>
        <result property="brokerage" column="brokerage"/>
        <result property="orderType" column="order_type"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap id="BrokerageMapVo" type="com.domain.plus.vo.BrokerageVo" extends="PlusBrokerageMap">
        <result property="phone" column="phone"/>
    </resultMap>

    <select id="queryPlusBrokerage" resultMap="PlusBrokerageMap">
        select
        <include refid="baseResult"></include>
        from  `plus_brokerage`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="userId != null">
                `user_id` = #{userId} and
            </if>
            <if test="secondId != null">
                `second_id` = #{secondId} and
            </if>
            <if test="brokerage != null">
                `brokerage` = #{brokerage} and
            </if>
            <if test="orderType != null">
                `order_type` = #{orderType} and
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime} and
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime} and
            </if>
            <if test = "(_parameter instanceof entity.PlusBrokerage$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="userIdList != null">
                    `user_id` in
                    <foreach collection="userIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="userIdSt !=null">
                    `user_id` >= #{userIdSt} and
                </if>
                <if test="userIdEd!=null">
                    `user_id` &lt;= #{userIdEd} and
                </if>
                <if test="secondIdList != null">
                    `second_id` in
                    <foreach collection="secondIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="secondIdSt !=null">
                    `second_id` >= #{secondIdSt} and
                </if>
                <if test="secondIdEd!=null">
                    `second_id` &lt;= #{secondIdEd} and
                </if>
                <if test="brokerageList != null">
                    `brokerage` in
                    <foreach collection="brokerageList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="brokerageSt !=null">
                    `brokerage` >= #{brokerageSt} and
                </if>
                <if test="brokerageEd!=null">
                    `brokerage` &lt;= #{brokerageEd} and
                </if>
                <if test="orderTypeList != null">
                    `order_type` in
                    <foreach collection="orderTypeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="orderTypeSt !=null">
                    `order_type` >= #{orderTypeSt} and
                </if>
                <if test="orderTypeEd!=null">
                    `order_type` &lt;= #{orderTypeEd} and
                </if>
                <if test="createTimeList != null">
                    `create_time` in
                    <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="createTimeSt !=null">
                    `create_time` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `create_time` &lt;= #{createTimeEd} and
                </if>
                <if test="updateTimeList != null">
                    `update_time` in
                    <foreach collection="updateTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="updateTimeSt !=null">
                    `update_time` >= #{updateTimeSt} and
                </if>
                <if test="updateTimeEd!=null">
                    `update_time` &lt;= #{updateTimeEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryPlusBrokerageLimit1" resultMap="PlusBrokerageMap">
        select
        <include refid="baseResult"></include>
        from  `plus_brokerage`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="userId != null">
                `user_id` = #{userId} and
            </if>
            <if test="secondId != null">
                `second_id` = #{secondId} and
            </if>
            <if test="brokerage != null">
                `brokerage` = #{brokerage} and
            </if>
            <if test="orderType != null">
                `order_type` = #{orderType} and
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime} and
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime} and
            </if>
            <if test = "(_parameter instanceof entity.PlusBrokerage$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="userIdList != null">
                        `user_id` in
                        <foreach collection="userIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="userIdSt !=null">
                    `user_id` >= #{userIdSt} and
                </if>
                <if test="userIdEd!=null">
                    `user_id` &lt;= #{userIdEd} and
                </if>
                    <if test="secondIdList != null">
                        `second_id` in
                        <foreach collection="secondIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="secondIdSt !=null">
                    `second_id` >= #{secondIdSt} and
                </if>
                <if test="secondIdEd!=null">
                    `second_id` &lt;= #{secondIdEd} and
                </if>
                    <if test="brokerageList != null">
                        `brokerage` in
                        <foreach collection="brokerageList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="brokerageSt !=null">
                    `brokerage` >= #{brokerageSt} and
                </if>
                <if test="brokerageEd!=null">
                    `brokerage` &lt;= #{brokerageEd} and
                </if>
                    <if test="orderTypeList != null">
                        `order_type` in
                        <foreach collection="orderTypeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="orderTypeSt !=null">
                    `order_type` >= #{orderTypeSt} and
                </if>
                <if test="orderTypeEd!=null">
                    `order_type` &lt;= #{orderTypeEd} and
                </if>
                    <if test="createTimeList != null">
                        `create_time` in
                        <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="createTimeSt !=null">
                    `create_time` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `create_time` &lt;= #{createTimeEd} and
                </if>
                    <if test="updateTimeList != null">
                        `update_time` in
                        <foreach collection="updateTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="updateTimeSt !=null">
                    `update_time` >= #{updateTimeSt} and
                </if>
                <if test="updateTimeEd!=null">
                    `update_time` &lt;= #{updateTimeEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <select id="queryBrokerageByUserId" resultMap="BrokerageMapVo">
        SELECT
            b.*, u.phone
        FROM
            plus_brokerage b
        LEFT JOIN plus_user u ON u.id = b.second_id
        where b.user_id = #{userId}
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `user_id`,
        `second_id`,
        `brokerage`,
        `order_type`+0 as `order_type`,
        `create_time`,
        `update_time`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof entity.PlusBrokerage$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.userId==true">
                        `user_id`,
                    </if>
                    <if test="fetchFields.fetchFields.secondId==true">
                        `second_id`,
                    </if>
                    <if test="fetchFields.fetchFields.brokerage==true">
                        `brokerage`,
                    </if>
                    <if test="fetchFields.fetchFields.orderType==true">
                        `order_type`+0 as `order_type`,
                    </if>
                    <if test="fetchFields.fetchFields.createTime==true">
                        `create_time`,
                    </if>
                    <if test="fetchFields.fetchFields.updateTime==true">
                        `update_time`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.userId==null">
                        `user_id`,
                    </if>
                    <if test="fetchFields.excludeFields.secondId==null">
                        `second_id`,
                    </if>
                    <if test="fetchFields.excludeFields.brokerage==null">
                        `brokerage`,
                    </if>
                    <if test="fetchFields.excludeFields.orderType==null">
                        `order_type`+0 as `order_type`,
                    </if>
                    <if test="fetchFields.excludeFields.createTime==null">
                        `create_time`,
                    </if>
                    <if test="fetchFields.excludeFields.updateTime==null">
                        `update_time`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof entity.PlusBrokerage$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>